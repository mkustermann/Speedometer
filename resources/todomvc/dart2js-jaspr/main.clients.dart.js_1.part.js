// Generated by dart2js (, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.8.0-edge.4c8aedcb57fe678e6d30acfdc021aa9888576638.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.clients.dart.js_1", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, B, D,
  A = {
    HashMap_HashMap($K, $V) {
      return new A._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap($K, $V) {
      return new B.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    HashMap_HashMap$from(other, $K, $V) {
      var result = A.HashMap_HashMap($K, $V);
      other.forEach$1(0, new A.HashMap_HashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashMap_LinkedHashMap$of(other, $K, $V) {
      var t1 = A.LinkedHashMap_LinkedHashMap($K, $V);
      t1.addAll$1(0, other);
      return t1;
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    HashMap_HashMap$from_closure: function HashMap_HashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    div(children, classes) {
      var _null = null;
      return new A.DomComponent("div", _null, classes, _null, _null, _null, _null, children, _null);
    },
    ul(children, classes) {
      var _null = null;
      return new A.DomComponent("ul", _null, classes, _null, _null, _null, _null, children, _null);
    },
    li(children, attributes, classes) {
      var t1, t2, _null = null;
      if (attributes == null) {
        t1 = type$.String;
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      } else
        t1 = attributes;
      t2 = type$.String;
      t2 = A.LinkedHashMap_LinkedHashMap$of(t1, t2, t2);
      return new A.DomComponent("li", _null, classes, _null, t2, _null, _null, children, _null);
    },
    button(children, classes, onClick, styles) {
      var t3,
        t1 = type$.String,
        t2 = A.LinkedHashMap_LinkedHashMap$of(B.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      t1 = B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.void_Function_JSObject);
      t3 = type$.dynamic;
      t1.addAll$1(0, A.events__events$closure().call$2$1$onClick(onClick, t3, t3));
      return new A.DomComponent("button", null, classes, styles, t2, t1, null, children, null);
    },
    input(children, attributes, classes, id, key, onChange, type, value) {
      var t3,
        t1 = type$.String,
        t2 = A.LinkedHashMap_LinkedHashMap$of(attributes, t1, t1);
      if (type != null)
        t2.$indexSet(0, "type", type.value);
      if (value != null)
        t2.$indexSet(0, "value", value);
      t1 = B.LinkedHashMap_LinkedHashMap$_empty(t1, type$.void_Function_JSObject);
      t3 = type$.dynamic;
      t1.addAll$1(0, A.events__events$closure().call$2$2$onChange$onInput(onChange, null, t3, t3));
      return new A.DomComponent("input", id, classes, null, t2, t1, null, children, key);
    },
    label(children, attributes, classes) {
      var t1, t2, _null = null;
      if (attributes == null) {
        t1 = type$.String;
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      } else
        t1 = attributes;
      t2 = type$.String;
      t2 = A.LinkedHashMap_LinkedHashMap$of(t1, t2, t2);
      return new A.DomComponent("label", _null, classes, _null, t2, _null, _null, children, _null);
    },
    span(children, classes, events) {
      var _null = null;
      return new A.DomComponent("span", _null, classes, _null, _null, events, _null, children, _null);
    },
    InputType: function InputType(t0, t1) {
      this.value = t0;
      this._name = t1;
    },
    events(onChange, onClick, onInput, V1, V2) {
      var t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.void_Function_JSObject);
      if (onClick != null)
        t1.$indexSet(0, "click", new A.events_closure(onClick));
      if (onChange != null)
        t1.$indexSet(0, "change", A._callWithValue("onChange", onChange, V2));
      return t1;
    },
    _callWithValue($event, fn, $V) {
      return new A._callWithValue_closure(fn, $V);
    },
    _extension_0_toIterable(_this) {
      return new B._SyncStarIterable(A._extension_0_toIterable$body(_this), type$._SyncStarIterable_JSObject);
    },
    _extension_0_toIterable$body($async$_this) {
      return function() {
        var _this = $async$_this;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], i, t1;
        return function $async$_extension_0_toIterable($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                i = 0;
              case 2:
                // for condition
                if (!(i < _this.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                t1 = _this.item(i);
                t1.toString;
                $async$goto = 5;
                return $async$iterator._async$_current = t1, 1;
              case 5:
                // after yield
              case 3:
                // for update
                ++i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    events_closure: function events_closure(t0) {
      this.onClick = t0;
    },
    _callWithValue_closure: function _callWithValue_closure(t0, t1) {
      this.fn = t0;
      this.V = t1;
    },
    _callWithValue__closure: function _callWithValue__closure(t0) {
      this.target = t0;
    },
    _callWithValue___closure: function _callWithValue___closure(t0) {
      this.target = t0;
    },
    Styles: function Styles() {
    },
    StylesMixin: function StylesMixin() {
    },
    _RawStyles: function _RawStyles(t0) {
      this.styles = t0;
    },
    _Styles_Object_StylesMixin: function _Styles_Object_StylesMixin() {
    },
    BuildableElement: function BuildableElement() {
    },
    DomComponent: function DomComponent(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.tag = t0;
      _.id = t1;
      _.classes = t2;
      _.styles = t3;
      _.attributes = t4;
      _.events = t5;
      _.child = t6;
      _.children = t7;
      _.key = t8;
    },
    DomElement: function DomElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._wrappingElement = null;
      _.RenderObjectElement__renderObject = t0;
      _.RenderObjectElement__dirtyRender = t1;
      _._children = null;
      _._forgottenChildren = t2;
      _._notificationTree = _._parent = null;
      _._cachedHash = t3;
      _._depth = null;
      _._component = t4;
      _._owner = _._binding = null;
      _._lifecycleState = t5;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    Text: function Text(t0, t1) {
      this.text = t0;
      this.key = t1;
    },
    TextElement: function TextElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderObjectElement__renderObject = t0;
      _.RenderObjectElement__dirtyRender = t1;
      _._notificationTree = _._parent = null;
      _._cachedHash = t2;
      _._depth = null;
      _._component = t3;
      _._owner = _._binding = null;
      _._lifecycleState = t4;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    Key: function Key() {
    },
    LocalKey: function LocalKey() {
    },
    ValueKey: function ValueKey(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    LeafElement: function LeafElement() {
    },
    LeafRenderObjectElement: function LeafRenderObjectElement() {
    },
    StatefulComponent: function StatefulComponent() {
    },
    State: function State() {
    },
    StatefulElement: function StatefulElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._framework$_state = t0;
      _._asyncInitState = null;
      _._didChangeDependencies = false;
      _._children = null;
      _._forgottenChildren = t1;
      _._notificationTree = _._parent = null;
      _._cachedHash = t2;
      _._depth = null;
      _._component = t3;
      _._owner = _._binding = null;
      _._lifecycleState = t4;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    StatelessComponent: function StatelessComponent() {
    },
    StatelessElement: function StatelessElement(t0, t1, t2, t3) {
      var _ = this;
      _._children = _._asyncFirstBuild = null;
      _._forgottenChildren = t0;
      _._notificationTree = _._parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._owner = _._binding = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    MapExtensions_get_keyValues(_this, $K, $V) {
      var t1 = B._instanceType(_this)._eval$1("LinkedHashMapEntriesIterable<1,2>");
      return B.MappedIterable_MappedIterable(new B.LinkedHashMapEntriesIterable(_this, t1), new A.MapExtensions_get_keyValues_closure($K, $V), t1._eval$1("Iterable.E"), $K._eval$1("@<0>")._bind$1($V)._eval$1("+(1,2)"));
    },
    TodoMVC: function TodoMVC(t0) {
      this.key = t0;
    },
    DisplayState: function DisplayState(t0) {
      this._name = t0;
    },
    TodoMVCState: function TodoMVCState(t0, t1) {
      var _ = this;
      _.todos = t0;
      _.activeCount = _.dataIdCount = 0;
      _.displayState = t1;
      _._framework$_element = null;
    },
    TodoMVCState_addTodo_closure: function TodoMVCState_addTodo_closure(t0, t1) {
      this.$this = t0;
      this.todo = t1;
    },
    TodoMVCState_toggle_closure: function TodoMVCState_toggle_closure(t0, t1) {
      this.$this = t0;
      this.i = t1;
    },
    TodoMVCState_toggleAll_closure: function TodoMVCState_toggleAll_closure(t0) {
      this.$this = t0;
    },
    TodoMVCState_destroy_closure: function TodoMVCState_destroy_closure(t0, t1) {
      this.$this = t0;
      this.i = t1;
    },
    TodoMVCState_clearCompleted_closure: function TodoMVCState_clearCompleted_closure(t0) {
      this.$this = t0;
    },
    TodoMVCState_clearCompleted__closure: function TodoMVCState_clearCompleted__closure() {
    },
    TodoMVCState_setDisplayState_closure: function TodoMVCState_setDisplayState_closure(t0, t1) {
      this.$this = t0;
      this.state = t1;
    },
    TodoMVCState_build_closure: function TodoMVCState_build_closure(t0) {
      this.$this = t0;
    },
    TodoMVCState_build_closure0: function TodoMVCState_build_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    TodoMVCState_build_closure1: function TodoMVCState_build_closure1(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    TodoMVCState_build_closure2: function TodoMVCState_build_closure2(t0, t1) {
      this._box_1 = t0;
      this.$this = t1;
    },
    NewTodo: function NewTodo(t0, t1) {
      this.handler = t0;
      this.key = t1;
    },
    NewTodo_build_closure: function NewTodo_build_closure(t0) {
      this.$this = t0;
    },
    MapExtensions_get_keyValues_closure: function MapExtensions_get_keyValues_closure(t0, t1) {
      this.K = t0;
      this.V = t1;
    },
    getComponentForParams(p) {
      return new A.TodoMVC(null);
    }
  },
  C;
  J = holdersList[1];
  B = holdersList[0];
  D = holdersList[2];
  A = hunkHelpers.updateHolder(holdersList[3], A);
  C = holdersList[4];
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    get$keys() {
      return new A._HashMapKeyIterable(this, B._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(key) {
      var t1 = this._containsKey$1(key);
      return t1;
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(key);
    },
    _get$1(key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = A._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        A._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._collection$_keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._collection$_keys = null;
        }
      }
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string" && key !== "__proto__")
        return _this._removeHashTableEntry$2(_this._collection$_strings, key);
      else if (typeof key == "number" && (key & 1073741823) === key)
        return _this._removeHashTableEntry$2(_this._collection$_nums, key);
      else
        return _this._remove$1(key);
    },
    _remove$1(key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._collection$_keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    forEach$1(_, action) {
      var $length, t1, i, key, t2, _this = this,
        keys = _this._collection$_computeKeys$0();
      for ($length = keys.length, t1 = B._instanceType(_this)._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2 = _this.$index(0, key);
        action.call$2(key, t2 == null ? t1._as(t2) : t2);
        if (keys !== _this._collection$_keys)
          throw B.wrapException(B.ConcurrentModificationError$(_this));
      }
    },
    _collection$_computeKeys$0() {
      var strings, index, names, entries, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_keys;
      if (result != null)
        return result;
      result = B.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      index = 0;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      }
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _collection$_addHashTableEntry$3(table, key, value) {
      if (table[key] == null) {
        ++this._collection$_length;
        this._collection$_keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _removeHashTableEntry$2(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = A._HashMap__getTableEntry(table, key);
        delete table[key];
        --this._collection$_length;
        this._collection$_keys = null;
        return value;
      } else
        return null;
    },
    _computeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    }
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_map._collection$_length !== 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map;
      return new A._HashMapKeyIterator(t1, t1._collection$_computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._collection$_keys)
        throw B.wrapException(B.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = keys[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  A.InputType.prototype = {
    _enumToString$0() {
      return "InputType." + this._name;
    }
  };
  A.Styles.prototype = {};
  A.StylesMixin.prototype = {};
  A._RawStyles.prototype = {};
  A._Styles_Object_StylesMixin.prototype = {};
  A.BuildableElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
    },
    didMount$0() {
      this.rebuild$0();
      this.super$Element$didMount();
    },
    shouldRebuild$1(newComponent) {
      return true;
    },
    performRebuild$0() {
      var e, st, t1, exception, t2, _this = this, _null = null, built = null;
      try {
        t1 = _this.build$0();
        t1 = B._setArrayType(t1.slice(0), B._arrayInstanceType(t1));
        built = t1;
      } catch (exception) {
        e = B.unwrapException(exception);
        st = B.getTraceFromException(exception);
        built = B._setArrayType([new A.DomComponent("div", _null, _null, _null, _null, _null, new A.Text("Error on building component: " + B.S(e), _null), _null, _null)], type$.JSArray_Component);
        B.print("Error: " + B.S(e) + " " + B.S(st));
      } finally {
        _this._dirty = false;
      }
      t1 = _this._children;
      if (t1 == null)
        t1 = B._setArrayType([], type$.JSArray_Element);
      t2 = _this._forgottenChildren;
      _this._children = _this.updateChildren$3$forgottenChildren(t1, built, t2);
      t2.clear$0(0);
    },
    visitChildren$1(visitor) {
      var t2, child,
        t1 = this._children;
      t1 = J.get$iterator$ax(t1 == null ? [] : t1);
      t2 = this._forgottenChildren;
      for (; t1.moveNext$0();) {
        child = t1.get$current();
        if (!t2.contains$1(0, child))
          visitor.call$1(child);
      }
    }
  };
  A.DomComponent.prototype = {
    createElement$0() {
      var t1 = B.HashSet_HashSet(type$.Element),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.DomElement(null, false, t1, t2, this, D._ElementLifecycle_0);
    }
  };
  A.DomElement.prototype = {
    get$component() {
      return type$.DomComponent._as(B.Element.prototype.get$component.call(this));
    },
    _updateInheritance$0() {
      var t1, _this = this;
      _this.super$Element$_updateInheritance();
      t1 = _this._inheritedElements;
      if (t1 != null && t1.containsKey$1(C.Type__WrappingDomComponent_kh6)) {
        t1 = _this._inheritedElements;
        t1.toString;
        _this._inheritedElements = A.HashMap_HashMap$from(t1, type$.Type, type$.InheritedElement);
      }
      t1 = _this._inheritedElements;
      _this._wrappingElement = t1 == null ? null : t1.remove$1(0, C.Type__WrappingDomComponent_kh6);
    },
    shouldRerender$1(newComponent) {
      var _this = this,
        t1 = type$.DomComponent;
      return t1._as(B.Element.prototype.get$component.call(_this)).tag !== newComponent.tag || t1._as(B.Element.prototype.get$component.call(_this)).id != newComponent.id || t1._as(B.Element.prototype.get$component.call(_this)).classes != newComponent.classes || t1._as(B.Element.prototype.get$component.call(_this)).styles != newComponent.styles || t1._as(B.Element.prototype.get$component.call(_this)).attributes != newComponent.attributes || t1._as(B.Element.prototype.get$component.call(_this)).events != newComponent.events;
    },
    updateRenderObject$0() {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.RenderObjectElement__renderObject;
      t1.toString;
      t2 = type$.DomComponent;
      t3 = t2._as(B.Element.prototype.get$component.call(_this));
      t4 = t2._as(B.Element.prototype.get$component.call(_this));
      t5 = t2._as(B.Element.prototype.get$component.call(_this));
      t6 = t2._as(B.Element.prototype.get$component.call(_this)).styles;
      t6 = t6 == null ? null : t6.styles;
      t1.updateElement$6(t3.tag, t4.id, t5.classes, t6, t2._as(B.Element.prototype.get$component.call(_this)).attributes, t2._as(B.Element.prototype.get$component.call(_this)).events);
    }
  };
  A.Text.prototype = {
    createElement$0() {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new A.TextElement(null, false, t1, this, D._ElementLifecycle_0);
    }
  };
  A.TextElement.prototype = {};
  A.Key.prototype = {};
  A.LocalKey.prototype = {};
  A.ValueKey.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return J.get$runtimeType$(other) === B.getRuntimeTypeOfDartObject(this) && this.$ti._is(other) && other.value === this.value;
    },
    get$hashCode(_) {
      return B.Object_hashAll([B.getRuntimeTypeOfDartObject(this), this.value]);
    },
    toString$0(_) {
      var t1 = this.$ti,
        t2 = t1._precomputed1,
        t3 = this.value,
        valueString = B.createRuntimeType(t2) === C.Type_String_AXU ? "<'" + t3 + "'>" : "<" + t3 + ">";
      if (B.getRuntimeTypeOfDartObject(this) === B.createRuntimeType(t1))
        return "[" + valueString + "]";
      return "[" + B.createRuntimeType(t2).toString$0(0) + " " + valueString + "]";
    }
  };
  A.LeafElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
    },
    didMount$0() {
      this.rebuild$0();
      this.super$Element$didMount();
    },
    shouldRebuild$1(newComponent) {
      return false;
    },
    performRebuild$0() {
      this._dirty = false;
    },
    visitChildren$1(visitor) {
    }
  };
  A.LeafRenderObjectElement.prototype = {
    didMount$0() {
      var t1, renderObject, _this = this;
      if (_this.RenderObjectElement__renderObject == null) {
        t1 = _this._parentRenderObjectElement.RenderObjectElement__renderObject;
        t1.toString;
        renderObject = new B.DomRenderObject(B._setArrayType([], type$.JSArray_JSObject));
        renderObject.parent = t1;
        _this.RenderObjectElement__renderObject = renderObject;
        t1 = _this._component;
        t1.toString;
        renderObject.updateText$1(type$.Text._as(t1).text);
      }
      _this.super$LeafElement$didMount();
    },
    update$1(newComponent) {
      var t1 = this._component;
      t1.toString;
      if (type$.Text._as(t1).text !== newComponent.text)
        this.RenderObjectElement__dirtyRender = true;
      this.super$Element$update(newComponent);
    },
    didUpdate$1(oldComponent) {
      var t1, t2, _this = this;
      if (_this.RenderObjectElement__dirtyRender) {
        _this.RenderObjectElement__dirtyRender = false;
        t1 = _this.RenderObjectElement__renderObject;
        t1.toString;
        t2 = _this._component;
        t2.toString;
        t1.updateText$1(type$.Text._as(t2).text);
      }
      _this.super$Element$didUpdate(oldComponent);
    },
    _didUpdateSlot$0() {
      this.super$Element$_didUpdateSlot();
      this.attachRenderObject$0();
    }
  };
  A.StatefulComponent.prototype = {
    createElement$0() {
      var t1 = new A.TodoMVCState(B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.Record_2_bool_isActive_and_String_todo), C.DisplayState_0),
        t2 = B.HashSet_HashSet(type$.Element),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      return t1._framework$_element = new A.StatefulElement(t1, t2, t3, this, D._ElementLifecycle_0);
    }
  };
  A.State.prototype = {
    setState$1(fn) {
      fn.call$0();
      this._framework$_element.markNeedsBuild$0();
    }
  };
  A.StatefulElement.prototype = {
    build$0() {
      return this._framework$_state.build$1(this);
    },
    didMount$0() {
      var _this = this;
      if (_this._owner._isFirstBuild)
        _this._framework$_state.toString;
      _this._initState$0();
      _this.super$BuildableElement$didMount();
    },
    _initState$0() {
      try {
        this._framework$_state.toString;
      } finally {
      }
      this._framework$_state.toString;
    },
    performRebuild$0() {
      var _this = this;
      _this._owner.toString;
      if (_this._didChangeDependencies) {
        _this._framework$_state.toString;
        _this._didChangeDependencies = false;
      }
      _this.super$BuildableElement$performRebuild();
    },
    shouldRebuild$1(newComponent) {
      this._framework$_state.toString;
      return true;
    },
    update$1(newComponent) {
      this.super$Element$update(newComponent);
      this._framework$_state.toString;
    },
    didUpdate$1(oldComponent) {
      try {
        this._framework$_state.toString;
      } finally {
      }
      this.super$Element$didUpdate(oldComponent);
    },
    deactivate$0() {
      this._framework$_state.toString;
      this.super$Element$deactivate();
    },
    unmount$0() {
      this.super$Element$unmount();
      this._framework$_state = this._framework$_state._framework$_element = null;
    }
  };
  A.StatelessComponent.prototype = {
    createElement$0() {
      var t1 = B.HashSet_HashSet(type$.Element),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.StatelessElement(t1, t2, this, D._ElementLifecycle_0);
    }
  };
  A.StatelessElement.prototype = {
    get$component() {
      return type$.StatelessComponent._as(B.Element.prototype.get$component.call(this));
    },
    didMount$0() {
      if (this._owner._isFirstBuild)
        this._binding.toString;
      this.super$BuildableElement$didMount();
    },
    shouldRebuild$1(newComponent) {
      type$.StatelessComponent._as(B.Element.prototype.get$component.call(this));
      return true;
    },
    build$0() {
      return type$.StatelessComponent._as(B.Element.prototype.get$component.call(this)).build$1(this);
    },
    performRebuild$0() {
      this._owner.toString;
      this.super$BuildableElement$performRebuild();
    }
  };
  A.TodoMVC.prototype = {};
  A.DisplayState.prototype = {
    _enumToString$0() {
      return "DisplayState." + this._name;
    }
  };
  A.TodoMVCState.prototype = {
    addTodo$1(todo) {
      this.setState$1(new A.TodoMVCState_addTodo_closure(this, todo));
    },
    toggle$1(i) {
      this.setState$1(new A.TodoMVCState_toggle_closure(this, i));
    },
    toggleAll$0() {
      this.setState$1(new A.TodoMVCState_toggleAll_closure(this));
    },
    destroy$1(i) {
      this.setState$1(new A.TodoMVCState_destroy_closure(this, i));
    },
    clearCompleted$0() {
      this.setState$1(new A.TodoMVCState_clearCompleted_closure(this));
    },
    setDisplayState$1(state) {
      this.setState$1(new A.TodoMVCState_setDisplayState_closure(this, state));
    },
    build$1(context) {
      var t8, t9, t10, t11, t12, t13, dataId, _0_2, isActive, t14, t15, t16, _i, state, _this = this, _null = null, _s5_ = "none;", _s6_ = "block;",
        _s10_ = "toggle-all",
        t1 = type$.String,
        t2 = B.LinkedHashMap_LinkedHashMap$_literal(["data-testid", "header"], t1, t1),
        t3 = type$.JSArray_Component,
        t4 = B._setArrayType([new A.DomComponent("h1", _null, _null, _null, _null, _null, _null, B._setArrayType([new A.Text("todos", _null)], t3), _null), A.div(B._setArrayType([new A.NewTodo(_this.get$addTodo(), _null)], t3), "input-container")], t3),
        t5 = _this.todos,
        t6 = B.LinkedHashMap_LinkedHashMap$_literal(["display", t5.__js_helper$_length === 0 ? _s5_ : _s6_], t1, t1),
        t7 = _this.activeCount > 0 ? B.LinkedHashMap_LinkedHashMap$_empty(t1, t1) : B.LinkedHashMap_LinkedHashMap$_literal(["checked", ""], t1, t1);
      t7 = A.input(B._setArrayType([], t3), t7, _s10_, _s10_, _null, new A.TodoMVCState_build_closure(_this), C.InputType_checkbox_checkbox, _null);
      t8 = B.LinkedHashMap_LinkedHashMap$_literal(["for", "toggle-all"], t1, t1);
      t8 = A.div(B._setArrayType([t7, A.label(B._setArrayType([new A.Text("Mark all as complete", _null)], t3), t8, "toggle-all-label")], t3), "toggle-all-container");
      t7 = B._setArrayType([], t3);
      for (t9 = A.MapExtensions_get_keyValues(t5, type$.int, type$.Record_2_bool_isActive_and_String_todo), t10 = B._instanceType(t9), t9 = new B.MappedIterator(J.get$iterator$ax(t9.__internal$_iterable), t9._f, t10._eval$1("MappedIterator<1,2>")), t10 = t10._rest[1], t11 = type$.ValueKey_String; t9.moveNext$0();) {
        t12 = {};
        t13 = t9.__internal$_current;
        if (t13 == null)
          t13 = t10._as(t13);
        t12.dataId = null;
        dataId = t13._0;
        t12.dataId = dataId;
        _0_2 = t13._1;
        isActive = _0_2._0;
        if (!(isActive && _this.displayState !== C.DisplayState_2))
          t13 = !isActive && _this.displayState !== C.DisplayState_1;
        else
          t13 = true;
        if (t13) {
          t13 = isActive ? "" : "completed";
          t14 = "" + dataId;
          t15 = B.LinkedHashMap_LinkedHashMap$_literal(["data-id", t14], t1, t1);
          t16 = isActive ? B.LinkedHashMap_LinkedHashMap$_empty(t1, t1) : B.LinkedHashMap_LinkedHashMap$_literal(["checked", ""], t1, t1);
          t7.push(A.li(B._setArrayType([A.div(B._setArrayType([A.input(B._setArrayType([], t3), t16, "toggle", _null, new A.ValueKey(t14 + "-" + isActive, t11), new A.TodoMVCState_build_closure0(t12, _this), C.InputType_checkbox_checkbox, _null), A.label(B._setArrayType([new A.Text(_0_2._1, _null)], t3), _null, _null), A.button(B._setArrayType([], t3), "destroy", new A.TodoMVCState_build_closure1(t12, _this), _null)], t3), "view")], t3), t15, t13));
        }
      }
      t7 = B._setArrayType([t8, A.ul(t7, "todo-list")], t3);
      t8 = B.LinkedHashMap_LinkedHashMap$_literal(["display", t5.__js_helper$_length === 0 ? _s5_ : _s6_], t1, t1);
      t9 = B._setArrayType([new A.Text("" + _this.activeCount, _null)], t3);
      t10 = _this.activeCount === 1 ? "" : "s";
      t10 = A.span(B._setArrayType([new A.DomComponent("strong", _null, _null, _null, _null, _null, _null, t9, _null), new A.Text(" item" + t10 + " left", _null)], t3), "todo-count", _null);
      t9 = B._setArrayType([], t3);
      for (t11 = [C.Record2_All_DisplayState_0, C.Record2_Active_DisplayState_1, C.Record2_Completed_DisplayState_2], t12 = type$.void_Function_JSObject, _i = 0; _i < 3; ++_i) {
        t13 = {};
        t14 = t11[_i];
        t13.state = null;
        state = t14._1;
        t13.state = state;
        t15 = _this.displayState === state ? "selected" : "";
        t13 = B.LinkedHashMap_LinkedHashMap$_literal(["click", new A.TodoMVCState_build_closure2(t13, _this)], t1, t12);
        t9.push(A.li(B._setArrayType([A.span(B._setArrayType([new A.Text(t14._0, _null)], t3), t15, t13)], t3), _null, _null));
      }
      t9 = A.ul(t9, "filters");
      t1 = B.LinkedHashMap_LinkedHashMap$_literal(["display", t5.__js_helper$_length - _this.activeCount === 0 ? _s5_ : _s6_], t1, t1);
      return B._setArrayType([new A.DomComponent("section", "root", "todoapp", _null, _null, _null, _null, B._setArrayType([new A.DomComponent("header", _null, "header", _null, t2, _null, _null, t4, _null), new A.DomComponent("main", _null, "main", new A._RawStyles(t6), _null, _null, _null, t7, _null), new A.DomComponent("footer", _null, "footer", new A._RawStyles(t8), _null, _null, _null, B._setArrayType([t10, t9, A.button(B._setArrayType([new A.Text("Clear completed", _null)], t3), "clear-completed", _this.get$clearCompleted(), new A._RawStyles(t1))], t3), _null)], t3), _null)], t3);
    }
  };
  A.NewTodo.prototype = {
    build$1(context) {
      var t2,
        t1 = type$.String;
      t1 = B.LinkedHashMap_LinkedHashMap$_literal(["placeholder", "What needs to be done?"], t1, t1);
      t2 = type$.JSArray_Component;
      return B._setArrayType([A.input(B._setArrayType([], t2), t1, "new-todo", null, null, new A.NewTodo_build_closure(this), null, "")], t2);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["bool(InputType)", "~(String)", "~()", "Map<String,~(JSObject)>({onChange:~(1^)?,onClick:~()?,onInput:~(0^)?})<Object?,Object?>"]);
  A.HashMap_HashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 32
  };
  A.events_closure.prototype = {
    call$1(_) {
      return this.onClick.call$0();
    },
    $signature: 3
  };
  A._callWithValue_closure.prototype = {
    call$1(e) {
      var t1, t2, t3, t4,
        target = e.target;
      $label1$1: {
        t1 = type$.JSObject._is(target);
        if (t1 && B.JSAnyUtilityExtension_instanceOfString(target, "HTMLInputElement")) {
          t1 = new A._callWithValue__closure(target).call$0();
          break $label1$1;
        }
        if (t1 && B.JSAnyUtilityExtension_instanceOfString(target, "HTMLTextAreaElement")) {
          t1 = target.value;
          break $label1$1;
        }
        if (t1 && B.JSAnyUtilityExtension_instanceOfString(target, "HTMLSelectElement")) {
          t1 = B._setArrayType([], type$.JSArray_String);
          for (t2 = new B._SyncStarIterator(A._extension_0_toIterable(target.selectedOptions)._outerHelper()); t2.moveNext$0();) {
            t3 = t2._async$_current;
            t4 = B.JSAnyUtilityExtension_instanceOfString(t3, "HTMLOptionElement");
            if (t4)
              t1.push(t3.value);
          }
          break $label1$1;
        }
        t1 = null;
        break $label1$1;
      }
      this.fn.call$1(this.V._as(t1));
    },
    $signature: 3
  };
  A._callWithValue__closure.prototype = {
    call$0() {
      var t1 = this.target,
        type = B.IterableExtensions_get_firstOrNull(new B.WhereIterable(C.List_T5C, new A._callWithValue___closure(t1), type$.WhereIterable_InputType));
      $label0$0: {
        if (C.InputType_checkbox_checkbox === type || C.InputType_radio_radio === type) {
          t1 = t1.checked;
          break $label0$0;
        }
        if (C.InputType_number_number === type) {
          t1 = t1.valueAsNumber;
          break $label0$0;
        }
        if (C.InputType_date_date === type || C.InputType_Ip0 === type) {
          t1 = t1.valueAsDate;
          break $label0$0;
        }
        if (C.InputType_file_file === type) {
          t1 = t1.files;
          break $label0$0;
        }
        t1 = t1.value;
        break $label0$0;
      }
      return t1;
    },
    $signature: 33
  };
  A._callWithValue___closure.prototype = {
    call$1(v) {
      return v._name === this.target.type;
    },
    $signature: typesOffset + 0
  };
  A.TodoMVCState_addTodo_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.todos.$indexSet(0, ++t1.dataIdCount, new B._Record_2_isActive_todo(true, this.todo));
      ++t1.activeCount;
    },
    $signature: 0
  };
  A.TodoMVCState_toggle_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.todos,
        t3 = this.i,
        _0_0 = t2.$index(0, t3),
        isActive = _0_0._0;
      t2.$indexSet(0, t3, new B._Record_2_isActive_todo(!isActive, _0_0._1));
      t2 = t1.activeCount;
      if (isActive)
        t1.activeCount = t2 - 1;
      else
        t1.activeCount = t2 + 1;
    },
    $signature: 0
  };
  A.TodoMVCState_toggleAll_closure.prototype = {
    call$0() {
      var t1, t2, t3, t4, todo;
      for (t1 = this.$this, t2 = t1.todos, t3 = new B.LinkedHashMapKeyIterator(t2, t2._modifications, t2._first); t3.moveNext$0();) {
        t4 = t3.__js_helper$_current;
        todo = t2.$index(0, t4)._1;
        t2.$indexSet(0, t4, new B._Record_2_isActive_todo(t1.activeCount === 0, todo));
      }
      t1.activeCount = t1.activeCount === 0 ? t2.__js_helper$_length : 0;
    },
    $signature: 0
  };
  A.TodoMVCState_destroy_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.todos.remove$1(0, this.i)._0)
        --t1.activeCount;
    },
    $signature: 0
  };
  A.TodoMVCState_clearCompleted_closure.prototype = {
    call$0() {
      this.$this.todos.removeWhere$1(0, new A.TodoMVCState_clearCompleted__closure());
    },
    $signature: 0
  };
  A.TodoMVCState_clearCompleted__closure.prototype = {
    call$2(dataId, todo) {
      return !todo._0;
    },
    $signature: 34
  };
  A.TodoMVCState_setDisplayState_closure.prototype = {
    call$0() {
      this.$this.displayState = this.state;
    },
    $signature: 0
  };
  A.TodoMVCState_build_closure.prototype = {
    call$1(_) {
      return this.$this.toggleAll$0();
    },
    $signature: 2
  };
  A.TodoMVCState_build_closure0.prototype = {
    call$1(_) {
      return this.$this.toggle$1(this._box_0.dataId);
    },
    $signature: 2
  };
  A.TodoMVCState_build_closure1.prototype = {
    call$0() {
      return this.$this.destroy$1(this._box_0.dataId);
    },
    $signature: 0
  };
  A.TodoMVCState_build_closure2.prototype = {
    call$1(_) {
      return this.$this.setDisplayState$1(this._box_1.state);
    },
    $signature: 3
  };
  A.NewTodo_build_closure.prototype = {
    call$1(str) {
      return this.$this.handler.call$1(B._asString(str));
    },
    $signature: 2
  };
  A.MapExtensions_get_keyValues_closure.prototype = {
    call$1(entry) {
      return new B._Record_2(entry.key, entry.value);
    },
    $signature() {
      return this.K._eval$1("@<0>")._bind$1(this.V)._eval$1("+(1,2)(MapEntry<1,2>)");
    }
  };
  (function aliases() {
    var _ = A.BuildableElement.prototype;
    _.super$BuildableElement$didMount = _.didMount$0;
    _.super$BuildableElement$performRebuild = _.performRebuild$0;
    _ = A.LeafElement.prototype;
    _.super$LeafElement$didMount = _.didMount$0;
  })();
  (function installTearOffs() {
    var _static = hunkHelpers.installStaticTearOff,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_0_u = hunkHelpers._instance_0u;
    _static(A, "events__events$closure", 0, null, ["call$2$3$onChange$onClick$onInput", "call$0", "call$2$0", "call$2$1$onClick", "call$2$2$onChange$onInput"], ["events", function() {
      var t1 = type$.dynamic;
      return A.events(null, null, null, t1, t1);
    }, function(V1, V2) {
      return A.events(null, null, null, V1, V2);
    }, function(onClick, V1, V2) {
      return A.events(null, onClick, null, V1, V2);
    }, function(onChange, onInput, V1, V2) {
      return A.events(onChange, null, onInput, V1, V2);
    }], 3, 0);
    var _;
    _instance_1_u(_ = A.TodoMVCState.prototype, "get$addTodo", "addTodo$1", 1);
    _instance_0_u(_, "get$clearCompleted", "clearCompleted$0", 2);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A._HashMap, B.MapBase);
    _inherit(A._HashMapKeyIterable, B.EfficientLengthIterable);
    _inheritMany(B.Object, [A._HashMapKeyIterator, A._Styles_Object_StylesMixin, A.StylesMixin, A.Key, A.State]);
    _inheritMany(B.Closure2Args, [A.HashMap_HashMap$from_closure, A.TodoMVCState_clearCompleted__closure]);
    _inheritMany(B._Enum, [A.InputType, A.DisplayState]);
    _inheritMany(B.Closure, [A.events_closure, A._callWithValue_closure, A._callWithValue___closure, A.TodoMVCState_build_closure, A.TodoMVCState_build_closure0, A.TodoMVCState_build_closure2, A.NewTodo_build_closure, A.MapExtensions_get_keyValues_closure]);
    _inheritMany(B.Closure0Args, [A._callWithValue__closure, A.TodoMVCState_addTodo_closure, A.TodoMVCState_toggle_closure, A.TodoMVCState_toggleAll_closure, A.TodoMVCState_destroy_closure, A.TodoMVCState_clearCompleted_closure, A.TodoMVCState_setDisplayState_closure, A.TodoMVCState_build_closure1]);
    _inherit(A.Styles, A._Styles_Object_StylesMixin);
    _inherit(A._RawStyles, A.Styles);
    _inheritMany(B.Element, [A.BuildableElement, A.LeafElement]);
    _inherit(A.DomComponent, B.ProxyComponent);
    _inherit(A.DomElement, B.ProxyRenderObjectElement);
    _inheritMany(B.Component, [A.Text, A.StatefulComponent, A.StatelessComponent]);
    _inherit(A.LeafRenderObjectElement, A.LeafElement);
    _inherit(A.TextElement, A.LeafRenderObjectElement);
    _inherit(A.LocalKey, A.Key);
    _inherit(A.ValueKey, A.LocalKey);
    _inheritMany(A.BuildableElement, [A.StatefulElement, A.StatelessElement]);
    _inherit(A.TodoMVC, A.StatefulComponent);
    _inherit(A.TodoMVCState, A.State);
    _inherit(A.NewTodo, A.StatelessComponent);
    _mixin(A._Styles_Object_StylesMixin, A.StylesMixin);
    _mixinHard(A.LeafRenderObjectElement, B.RenderObjectElement);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"_HashMap":{"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_WrappingDomComponent":{"DomComponent":[],"ProxyComponent":[],"Component":[]},"BuildableElement":{"Element":[]},"DomComponent":{"ProxyComponent":[],"Component":[]},"DomElement":{"RenderObjectElement":[],"Element":[]},"Text":{"Component":[]},"TextElement":{"RenderObjectElement":[],"Element":[]},"LeafElement":{"Element":[]},"LeafRenderObjectElement":{"RenderObjectElement":[],"Element":[]},"StatefulComponent":{"Component":[]},"StatefulElement":{"Element":[]},"StatelessComponent":{"Component":[]},"StatelessElement":{"Element":[]},"TodoMVC":{"Component":[]},"NewTodo":{"StatelessComponent":[],"Component":[]}}'));
  B._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"StylesMixin":1,"State":1}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      DomComponent: findType("DomComponent"),
      Element: findType("Element"),
      InheritedElement: findType("InheritedElement"),
      JSArray_Component: findType("JSArray<Component>"),
      JSArray_Element: findType("JSArray<Element>"),
      JSArray_JSObject: findType("JSArray<JSObject>"),
      JSArray_String: findType("JSArray<String>"),
      JSObject: findType("JSObject"),
      Record_2_bool_isActive_and_String_todo: findType("+isActive,todo(bool,String)"),
      StatelessComponent: findType("StatelessComponent"),
      String: findType("String"),
      Text: findType("Text"),
      Type: findType("Type"),
      ValueKey_String: findType("ValueKey<String>"),
      WhereIterable_InputType: findType("WhereIterable<InputType>"),
      _SyncStarIterable_JSObject: findType("_SyncStarIterable<JSObject>"),
      dynamic: findType("@"),
      int: findType("int"),
      void_Function_JSObject: findType("~(JSObject)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.DisplayState_0 = new A.DisplayState("all");
    C.DisplayState_1 = new A.DisplayState("active");
    C.DisplayState_2 = new A.DisplayState("completed");
    C.InputType_Ip0 = new A.InputType("datetime-local", "dateTimeLocal");
    C.InputType_checkbox_checkbox = new A.InputType("checkbox", "checkbox");
    C.InputType_date_date = new A.InputType("date", "date");
    C.InputType_file_file = new A.InputType("file", "file");
    C.InputType_number_number = new A.InputType("number", "number");
    C.InputType_radio_radio = new A.InputType("radio", "radio");
    C.InputType_button_button = new A.InputType("button", "button");
    C.InputType_color_color = new A.InputType("color", "color");
    C.InputType_email_email = new A.InputType("email", "email");
    C.InputType_hidden_hidden = new A.InputType("hidden", "hidden");
    C.InputType_image_image = new A.InputType("image", "image");
    C.InputType_month_month = new A.InputType("month", "month");
    C.InputType_password_password = new A.InputType("password", "password");
    C.InputType_range_range = new A.InputType("range", "range");
    C.InputType_reset_reset = new A.InputType("reset", "reset");
    C.InputType_search_search = new A.InputType("search", "search");
    C.InputType_submit_submit = new A.InputType("submit", "submit");
    C.InputType_tel_tel = new A.InputType("tel", "tel");
    C.InputType_text_text = new A.InputType("text", "text");
    C.InputType_time_time = new A.InputType("time", "time");
    C.InputType_url_url = new A.InputType("url", "url");
    C.InputType_week_week = new A.InputType("week", "week");
    C.List_T5C = B._setArrayType(makeConstList([C.InputType_button_button, C.InputType_checkbox_checkbox, C.InputType_color_color, C.InputType_date_date, C.InputType_Ip0, C.InputType_email_email, C.InputType_file_file, C.InputType_hidden_hidden, C.InputType_image_image, C.InputType_month_month, C.InputType_number_number, C.InputType_password_password, C.InputType_radio_radio, C.InputType_range_range, C.InputType_reset_reset, C.InputType_search_search, C.InputType_submit_submit, C.InputType_tel_tel, C.InputType_text_text, C.InputType_time_time, C.InputType_url_url, C.InputType_week_week]), B.findType("JSArray<InputType>"));
    C.Record2_Active_DisplayState_1 = new B._Record_2("Active", C.DisplayState_1);
    C.Record2_All_DisplayState_0 = new B._Record_2("All", C.DisplayState_0);
    C.Record2_Completed_DisplayState_2 = new B._Record_2("Completed", C.DisplayState_2);
    C.Type_String_AXU = B.typeLiteral("String");
    C.Type__WrappingDomComponent_kh6 = B.typeLiteral("_WrappingDomComponent");
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.clients.dart.js_1", e: "endPart", h: h});
})($__dart_deferred_initializers__, "B7DERL8wi+bmR2ZOLSPQSArwk/c=");
;
//# sourceMappingURL=main.clients.dart.js_1.part.js.map
